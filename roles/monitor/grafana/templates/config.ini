instance_name = ${HOSTNAME}

[auth]
disable_login_form = false

[auth.anonymous]
enabled = false

{% if secrets.grafana.sso.enabled %}
[auth.basic]
enabled = false

[auth.gitlab]
enabled = true

allow_sign_up = true
api_url = https://git.{{ secrets.dns.base }}/api/v4
auth_url = https://git.{{ secrets.dns.base }}/oauth/authorize
client_id = {{ secrets.grafana.sso.client_id }}
client_secret = {{ secrets.grafana.sso.client_secret }}
name = gitlab
scopes = api
token_url = https://git.{{ secrets.dns.base }}/oauth/token
{% else %}
[auth.basic]
enabled = true
{% endif %}

[database]
type = {{ secrets.grafana.database.type }}
{% if secrets.grafana.database.type == "postgres" %}
host = postgres.gitlab.svc.{{ secrets.dns.cluster }}.{{ secrets.dns.base }}
name = grafana
user = grafana
password = {{ secrets.grafana.database.password }}
{% elif secrets.grafana.database.type == "sqlite3" %}
path = {{ secrets.grafana.database.path }}
{% endif %}

[external_image_storage]
provider = s3

[external_image_storage.s3]
bucket = {{ secrets.dns.cluster }}-{{ secrets.dns.base}}-grafana-images
region = {{ secrets.aws.region.primary }}
access_key = {{ secrets.grafana.aws.access_key }}
secret_key = {{ secrets.grafana.aws.secret_key }}

[paths]
data = /data/grafana
logs = /data/grafana/logs
plugins = /data/grafana/plugins

[security]
admin_user = root
admin_password = {{ secrets.grafana.root.password }}

[server]
root_url = https://metrics.{{ secrets.dns.base }}/

[session]
provider = {{ secrets.grafana.session.type }}
{% if secrets.grafana.session.type == "redis" %}
provider_config = addr=redis.gitlab.svc.{{ secrets.dns.cluster }}.{{ secrets.dns.base }}:6379,pool_size=10,prefix=grafana
{% endif %}